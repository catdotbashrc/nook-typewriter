{
  "permissions": {
    "allow": [
      "Bash(find:*)",
      "Bash(test:*)",
      "Bash(rm:*)",
      "Bash(mv:*)",
      "Bash(diff:*)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(docker build:*)",
      "Bash(docker run:*)",
      "Bash(docker exec:*)",
      "Bash(docker stop:*)",
      "Bash(docker rm:*)",
      "WebFetch(domain:github.com)",
      "Bash(ls:*)",
      "Bash(cp:*)",
      "Bash(mkdir:*)",
      "WebFetch(domain:www.marxists.org)",
      "Bash(chmod:*)",
      "Bash(./test-proc.sh:*)",
      "Bash(./verify-build-simple.sh:*)",
      "Bash(./usb-automated-test.sh:*)",
      "Bash(grep:*)",
      "Bash(true)",
      "WebFetch(domain:docs.anthropic.com)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(git rm:*)",
      "WebFetch(domain:www.naperwrimo.org)",
      "Bash(docker stats:*)",
      "Bash(mount)",
      "Bash(docker system events:*)",
      "Bash(docker images:*)",
      "Bash(mount:*)",
      "Bash(git clone:*)",
      "Bash(git submodule add:*)",
      "Bash(git submodule:*)",
      "Bash(timeout:*)",
      "Bash(./test_modules.sh:*)",
      "Bash(./test/test_modules.sh:*)",
      "Bash(./build_kernel.sh:*)",
      "Bash(git config:*)",
      "Bash(./test-improvements.sh:*)",
      "WebFetch(domain:xdaforums.com)",
      "WebSearch",
      "Bash(git checkout:*)",
      "Bash(git worktree:*)",
      "Bash(git push:*)",
      "Bash(sed:*)",
      "Bash(make:*)",
      "mcp__simone__log_activity",
      "Bash(gh repo view:*)",
      "Bash(gh api:*)",
      "WebFetch(domain:www.kernel.org)",
      "WebFetch(domain:www.cs.cmu.edu)",
      "Bash(gh issue list:*)",
      "Bash(gh issue create:*)",
      "Bash(npx simone-mcp:*)",
      "Bash(gh label list:*)",
      "Bash(gh issue view:*)",
      "Bash(tree:*)",
      "Bash(gh project create:*)",
      "Bash(gh:*)",
      "Bash(gh search issues:*)",
      "Bash(sqlite3:*)",
      "Bash(git merge:*)",
      "WebFetch(domain:kernelnewbies.org)",
      "Bash(git remote get-url:*)",
      "Bash(touch:*)",
      "Bash(git clean:*)",
      "Bash(bash:*)",
      "Bash(./build/scripts/build-rootfs.sh:*)",
      "Bash(./tests/test-rootfs.sh:*)",
      "Bash(git fetch:*)",
      "Bash(git log:*)",
      "Bash(git branch:*)",
      "Bash(./tests/kernel-safety.sh:*)",
      "Bash(./tests/pre-flight.sh:*)",
      "Bash(./tests/smoke-test.sh:*)",
      "Bash(source:*)",
      "Bash(validate_kernel_config)",
      "Bash(python3:*)",
      "Bash(./create_boot_art.sh:*)",
      "Bash(pyenv:*)",
      "Bash(sudo cp:*)",
      "Bash(./tests/test-font-setup.sh:*)",
      "Bash(docker kill:*)",
      "Bash(./scripts/apply_metadata.sh:*)",
      "WebFetch(domain:git.kernel.org)",
      "Bash(./test-jesteros-config.sh:*)",
      "WebFetch(domain:stackoverflow.com)",
      "Bash(/dev/null)",
      "Bash(scripts/kconfig/conf:*)",
      "Bash(ARCH=arm KERNELVERSION=2.6.29 scripts/kconfig/conf -s arch/arm/Kconfig)",
      "Bash(shellcheck:*)",
      "Bash(git pull:*)",
      "Bash(./tests/gate-keeper.sh:*)",
      "Bash(git pull:*)",
      "Bash(git stash push:*)",
      "Bash(git stash pop:*)",
      "Bash(echo:*)",
      "Bash(wget:*)",
      "Bash(sha256sum:*)",
      "Bash(. source/scripts/lib/service-functions.sh)",
      "Bash(./test-userspace-services.sh:*)",
      "Bash(./tests/test-userspace-services.sh:*)",
      "mcp__sequential-thinking__sequentialthinking",
      "Bash(./run-tests.sh)",
      "Bash(for:*)",
      "Bash(do if [ -f \"source/scripts/boot/$file\" ])",
      "Bash(then echo \"✓ BOOT: $file\")",
      "Bash(elif [ -f \"source/scripts/menu/$file\" ])",
      "Bash(then echo \"✓ MENU: $file\")",
      "Bash(elif [ -f \"source/scripts/services/$file\" ])",
      "Bash(then echo \"✓ SERVICE: $file\")",
      "Bash(elif [ -f \"source/scripts/lib/$file\" ])",
      "Bash(then echo \"✓ LIB: $file\")",
      "Bash(else echo \"✗ MISSING: $file\")",
      "Bash(fi)",
      "Bash(done)",
      "Bash(./05-consistency-check.sh:*)",
      "Bash(du:*)",
      "Bash(do echo \"Updating: $file\")",
      "Bash(do echo \"Checking: $dockerfile\")",
      "Bash(do if grep -q \"source/\" \"$script\")",
      "Bash(adb connect:*)",
      "Bash(adb shell:*)",
      "Bash(./tests/phase3-validation.sh:*)",
      "Bash(cat:*)",
      "Bash(./02-boot-test.sh:*)",
      "Bash(./tests/run-integration-test.sh:*)",
      "Bash(adb devices:*)",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "Bash(./tests/test-runner.sh build:*)",
      "Bash(./tests/test-runner.sh:*)",
      "Bash(sudo mkdir:*)",
      "Bash(DOCKER_BUILDKIT=1 docker build --no-cache -t jesteros-prod-multistage -f build/docker/jesteros-production-multistage.dockerfile .)",
      "Bash(./tools/build-workflow-improvements.sh:*)",
      "Bash(./tests/run-all-tests.sh:*)",
      "Bash(./tools/optimize-buildkit.sh:*)",
      "Bash(./utilities/test/run-all.sh:*)",
      "Bash(do)",
      "Bash(if [ -f \"scripts/test/$file\" ])",
      "Bash([ -f \"utilities/test/tests/$file\" ])",
      "Bash(then)",
      "Bash(if [ -f \"tests/$file\" ])",
      "Bash(else)",
      "Bash(tar:*)",
      "Bash(do [ -f \"$file\" ])"
    ],
    "deny": [],
    "defaultMode": "acceptEdits",
    "additionalDirectories": [
      "/home/jyeary/projects/personal/nook-kernel-feature/",
      "/tmp/",
      "/home/jyeary/notes",
      "/home/jyeary/projects/personal/nook-issue-19",
      "/home/jyeary/projects/personal",
      "/home/jyeary/projects"
    ]
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "simone"
  ],
  "outputStyle": "documentation-specialist"
}