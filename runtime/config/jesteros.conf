#!/bin/bash
# jesteros.conf - Central configuration for JesterOS
# Phase 2: Replaces 108 hardcoded paths across the system
# All paths can be overridden via environment variables

# =============================================================================
# SYSTEM PATHS - No more hardcoded paths!
# =============================================================================

# Base directories
export JESTEROS_BASE="${JESTEROS_BASE:-/runtime}"
export JESTEROS_CONFIG="${JESTEROS_CONFIG:-$JESTEROS_BASE/config}"
export JESTEROS_VAR="${JESTEROS_VAR:-/var/jesteros}"
export JESTEROS_LOG="${JESTEROS_LOG:-/var/log/jesteros}"
export JESTEROS_TMP="${JESTEROS_TMP:-/tmp/jesteros}"

# Layer directories (4-layer architecture)
export LAYER1_UI="${LAYER1_UI:-$JESTEROS_BASE/1-ui}"
export LAYER2_APP="${LAYER2_APP:-$JESTEROS_BASE/2-application}"
export LAYER3_SYSTEM="${LAYER3_SYSTEM:-$JESTEROS_BASE/3-system}"
export LAYER4_HARDWARE="${LAYER4_HARDWARE:-$JESTEROS_BASE/4-hardware}"

# Specific component paths
export MENU_DIR="${MENU_DIR:-$LAYER1_UI/menu}"
export DISPLAY_DIR="${DISPLAY_DIR:-$LAYER1_UI/display}"
export THEMES_DIR="${THEMES_DIR:-$LAYER1_UI/themes}"
export JESTER_APP="${JESTER_APP:-$LAYER2_APP/jesteros}"
export WRITING_APP="${WRITING_APP:-$LAYER2_APP/writing}"
export COMMON_LIB="${COMMON_LIB:-$LAYER3_SYSTEM/common}"
export MEMORY_LIB="${MEMORY_LIB:-$LAYER3_SYSTEM/memory}"
export SENSORS_DIR="${SENSORS_DIR:-$LAYER4_HARDWARE/sensors}"
export POWER_DIR="${POWER_DIR:-$LAYER4_HARDWARE/power}"

# Data directories
export NOTES_DIR="${NOTES_DIR:-/root/notes}"
export DRAFTS_DIR="${DRAFTS_DIR:-/root/drafts}"
export SCROLLS_DIR="${SCROLLS_DIR:-/root/scrolls}"

# =============================================================================
# SERVICE CONFIGURATION
# =============================================================================

# Service names and paths
export JESTER_DAEMON="${JESTER_DAEMON:-$JESTER_APP/daemon.sh}"
export TRACKER_DAEMON="${TRACKER_DAEMON:-$JESTER_APP/tracker.sh}"
export MEMORY_GUARDIAN="${MEMORY_GUARDIAN:-$MEMORY_LIB/memory-guardian.sh}"
export TEMP_MONITOR="${TEMP_MONITOR:-$SENSORS_DIR/temperature-monitor.sh}"
export BATTERY_MONITOR="${BATTERY_MONITOR:-$POWER_DIR/battery-monitor.sh}"
export POWER_OPTIMIZER="${POWER_OPTIMIZER:-$POWER_DIR/power-optimizer.sh}"

# Service intervals (seconds)
export SERVICE_CHECK_INTERVAL="${SERVICE_CHECK_INTERVAL:-30}"
export MEMORY_CHECK_INTERVAL="${MEMORY_CHECK_INTERVAL:-60}"
export TEMP_CHECK_INTERVAL="${TEMP_CHECK_INTERVAL:-30}"
export BATTERY_CHECK_INTERVAL="${BATTERY_CHECK_INTERVAL:-120}"

# =============================================================================
# DISPLAY CONFIGURATION
# =============================================================================

# E-Ink settings
export EINK_DEVICE="${EINK_DEVICE:-/dev/fb0}"
export EINK_REFRESH_FULL="${EINK_REFRESH_FULL:-full}"
export EINK_REFRESH_PARTIAL="${EINK_REFRESH_PARTIAL:-partial}"
export EINK_CLEAR_ON_EXIT="${EINK_CLEAR_ON_EXIT:-true}"

# Display commands
export DISPLAY_CLEAR_CMD="${DISPLAY_CLEAR_CMD:-fbink -c}"
export DISPLAY_TEXT_CMD="${DISPLAY_TEXT_CMD:-fbink}"
export DISPLAY_IMAGE_CMD="${DISPLAY_IMAGE_CMD:-fbink -i}"

# Terminal fallback
export TERM_FALLBACK="${TERM_FALLBACK:-true}"
export TERM_COLORS="${TERM_COLORS:-false}"  # E-Ink doesn't support colors

# =============================================================================
# MEMORY CONFIGURATION (Realistic targets from Phase 1)
# =============================================================================

# Memory thresholds (KB)
export MEMORY_CRITICAL="${MEMORY_CRITICAL:-10240}"      # 10MB
export MEMORY_WARNING="${MEMORY_WARNING:-20480}"        # 20MB
export MEMORY_COMFORTABLE="${MEMORY_COMFORTABLE:-30720}" # 30MB
export MEMORY_OPTIMAL="${MEMORY_OPTIMAL:-40960}"        # 40MB

# Service memory limits (KB)
export SERVICE_MEMORY_TOTAL="${SERVICE_MEMORY_TOTAL:-8192}"  # 8MB total
export JESTER_MEMORY_LIMIT="${JESTER_MEMORY_LIMIT:-2048}"    # 2MB
export TRACKER_MEMORY_LIMIT="${TRACKER_MEMORY_LIMIT:-2048}"  # 2MB
export MONITOR_MEMORY_LIMIT="${MONITOR_MEMORY_LIMIT:-2048}"  # 2MB

# =============================================================================
# HARDWARE CONFIGURATION
# =============================================================================

# Temperature thresholds (Celsius)
export EINK_MIN_TEMP="${EINK_MIN_TEMP:-5}"
export EINK_MAX_TEMP="${EINK_MAX_TEMP:-40}"
export EINK_OPTIMAL_LOW="${EINK_OPTIMAL_LOW:-15}"
export EINK_OPTIMAL_HIGH="${EINK_OPTIMAL_HIGH:-30}"
export BATTERY_CHARGE_MAX="${BATTERY_CHARGE_MAX:-45}"
export BATTERY_CRITICAL="${BATTERY_CRITICAL:-50}"
export CPU_THROTTLE="${CPU_THROTTLE:-70}"
export CPU_CRITICAL="${CPU_CRITICAL:-85}"

# Power profiles
export POWER_PROFILE_DEFAULT="${POWER_PROFILE_DEFAULT:-balanced}"
export POWER_PROFILES="${POWER_PROFILES:-writing balanced performance battery}"

# Battery thresholds (percentage)
export BATTERY_LOW="${BATTERY_LOW:-20}"
export BATTERY_CRITICAL_PCT="${BATTERY_CRITICAL_PCT:-10}"
export BATTERY_SHUTDOWN="${BATTERY_SHUTDOWN:-5}"

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log files
export SYSTEM_LOG="${SYSTEM_LOG:-$JESTEROS_LOG/system.log}"
export SERVICE_LOG="${SERVICE_LOG:-$JESTEROS_LOG/services.log}"
export SENSOR_LOG="${SENSOR_LOG:-$JESTEROS_LOG/sensors.log}"
export MEMORY_LOG="${MEMORY_LOG:-$JESTEROS_LOG/memory.log}"
export ERROR_LOG="${ERROR_LOG:-$JESTEROS_LOG/error.log}"

# Log levels
export LOG_LEVEL="${LOG_LEVEL:-INFO}"  # DEBUG, INFO, WARN, ERROR, CRITICAL
export LOG_TO_FILE="${LOG_TO_FILE:-true}"
export LOG_TO_CONSOLE="${LOG_TO_CONSOLE:-false}"
export LOG_MAX_SIZE="${LOG_MAX_SIZE:-1048576}"  # 1MB per log file

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Enable/disable features
export ENABLE_JESTER="${ENABLE_JESTER:-true}"
export ENABLE_TRACKER="${ENABLE_TRACKER:-true}"
export ENABLE_MEMORY_GUARDIAN="${ENABLE_MEMORY_GUARDIAN:-true}"
export ENABLE_TEMP_MONITOR="${ENABLE_TEMP_MONITOR:-true}"
export ENABLE_BATTERY_MONITOR="${ENABLE_BATTERY_MONITOR:-true}"
export ENABLE_POWER_OPTIMIZER="${ENABLE_POWER_OPTIMIZER:-true}"
export ENABLE_GIT_SUPPORT="${ENABLE_GIT_SUPPORT:-false}"  # Optional
export ENABLE_WIFI_SYNC="${ENABLE_WIFI_SYNC:-false}"      # Optional

# Debug settings
export DEBUG_MODE="${DEBUG_MODE:-false}"
export VERBOSE_OUTPUT="${VERBOSE_OUTPUT:-false}"
export TRACE_ENABLED="${TRACE_ENABLED:-false}"

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================

# Cache settings
export CACHE_ENABLED="${CACHE_ENABLED:-true}"
export CACHE_DIR="${CACHE_DIR:-$JESTEROS_TMP/cache}"
export CACHE_TTL="${CACHE_TTL:-300}"  # 5 minutes
export SENSOR_CACHE_TTL="${SENSOR_CACHE_TTL:-5}"  # 5 seconds

# Process limits
export MAX_SUBPROCESSES="${MAX_SUBPROCESSES:-5}"
export SUBPROCESS_TIMEOUT="${SUBPROCESS_TIMEOUT:-30}"

# =============================================================================
# USER PREFERENCES
# =============================================================================

# Writing preferences
export DEFAULT_EDITOR="${DEFAULT_EDITOR:-vim}"
export EDITOR_ARGS="${EDITOR_ARGS:--c 'set wrap' -c 'set linebreak'}"
export AUTO_SAVE="${AUTO_SAVE:-true}"
export AUTO_SAVE_INTERVAL="${AUTO_SAVE_INTERVAL:-300}"  # 5 minutes

# UI preferences
export MENU_TIMEOUT="${MENU_TIMEOUT:-30}"
export MENU_DEFAULT="${MENU_DEFAULT:-1}"  # Default to "Write"
export SHOW_JESTER="${SHOW_JESTER:-true}"
export JESTER_MOOD="${JESTER_MOOD:-auto}"  # auto, happy, busy, stressed

# =============================================================================
# HELPER FUNCTIONS
# =============================================================================

# Load configuration (can be sourced by scripts)
load_jesteros_config() {
    # This file is already being sourced
    return 0
}

# Get configuration value
get_config() {
    local key="${1:-}"
    local default="${2:-}"
    
    # Try to get from environment
    local value="${!key:-$default}"
    echo "$value"
}

# Set configuration value (runtime only, not persistent)
set_config() {
    local key="${1:-}"
    local value="${2:-}"
    
    export "$key=$value"
}

# Validate configuration
validate_config() {
    local errors=0
    
    # Check required directories exist
    for dir in "$JESTEROS_BASE" "$JESTEROS_CONFIG"; do
        if [ ! -d "$dir" ]; then
            echo "ERROR: Required directory missing: $dir" >&2
            ((errors++))
        fi
    done
    
    # Check memory settings are sane
    if [ "$MEMORY_CRITICAL" -gt "$MEMORY_WARNING" ]; then
        echo "ERROR: MEMORY_CRITICAL > MEMORY_WARNING" >&2
        ((errors++))
    fi
    
    return $errors
}

# Export functions
export -f load_jesteros_config get_config set_config validate_config

# =============================================================================
# AUTO-LOAD
# =============================================================================

# Create required directories on load
mkdir -p "$JESTEROS_VAR" "$JESTEROS_LOG" "$JESTEROS_TMP" "$CACHE_DIR" 2>/dev/null || true

# Validate on load if not in setup mode
if [ "${JESTEROS_SETUP:-false}" != "true" ]; then
    validate_config || true
fi

# Source this file in scripts with:
# source /runtime/config/jesteros.conf