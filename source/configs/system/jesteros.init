#!/bin/sh
### BEGIN INIT INFO
# Provides:          jesteros
# Required-Start:    $local_fs
# Required-Stop:     $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: JesterOS Writing Support
# Description:       Userspace implementation of JesterOS for Nook Typewriter
### END INIT INFO

NAME=jesteros
DAEMON=/usr/local/bin/jesteros-userspace.sh
PIDFILE=/var/run/$NAME.pid
DESC="JesterOS Writing Support"

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

# Load init functions
. /lib/lsb/init-functions || true

do_start() {
    echo "Starting $DESC..."
    
    # Show boot splash if available
    if [ -x /usr/local/bin/jester-splash-eink.sh ]; then
        /usr/local/bin/jester-splash-eink.sh
    fi
    
    # Initialize JesterOS directory structure
    if [ -x /usr/local/bin/jesteros-userspace.sh ]; then
        /usr/local/bin/jesteros-userspace.sh
    fi
    
    # Start services using the service manager
    if [ -x /usr/local/bin/jesteros-service-manager.sh ]; then
        # Initialize service management
        /usr/local/bin/jesteros-service-manager.sh init
        
        # Start all services
        /usr/local/bin/jesteros-service-manager.sh start all
        
        # Start the monitoring daemon
        /usr/local/bin/jesteros-service-manager.sh monitor &
        echo $! > $PIDFILE
    else
        # Fallback to old method
        $DAEMON
        start-stop-daemon --start --quiet --pidfile $PIDFILE \
            --make-pidfile --background \
            --exec $DAEMON -- --daemon
    fi
    
    echo "$DESC started."
}

do_stop() {
    echo "Stopping $DESC..."
    
    # Stop services using the service manager
    if [ -x /usr/local/bin/jesteros-service-manager.sh ]; then
        # Stop the monitoring daemon
        if [ -f $PIDFILE ]; then
            kill $(cat $PIDFILE) 2>/dev/null || true
        fi
        
        # Stop all services
        /usr/local/bin/jesteros-service-manager.sh stop all
    else
        # Fallback to old method
        start-stop-daemon --stop --quiet --pidfile $PIDFILE
    fi
    
    rm -f $PIDFILE
    
    # Clean up the jesteros directory (optional, can be preserved)
    # rm -rf /var/jesteros
    echo "$DESC stopped."
}

case "$1" in
    start)
        do_start
        ;;
    stop)
        do_stop
        ;;
    restart|force-reload)
        do_stop
        do_start
        ;;
    status)
        if [ -f $PIDFILE ]; then
            echo "$DESC is running."
            echo "Jester Status:"
            cat /var/jesteros/jester 2>/dev/null || echo "Jester not found"
        else
            echo "$DESC is not running."
        fi
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|force-reload|status}" >&2
        exit 3
        ;;
esac

exit 0