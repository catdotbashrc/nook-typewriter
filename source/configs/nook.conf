#!/bin/bash
#
# Nook Typewriter Configuration File
# ===================================
# Central configuration for all Nook scripts
#
# This file should be sourced by scripts that need configuration values:
#   source /path/to/nook.conf
#

# ============================================================================
# System Configuration
# ============================================================================

# Project paths
NOOK_PROJECT_DIR="${NOOK_PROJECT_DIR:-/home/nook}"
NOOK_CONFIG_DIR="${NOOK_CONFIG_DIR:-$NOOK_PROJECT_DIR/config}"
NOOK_SCRIPTS_DIR="${NOOK_SCRIPTS_DIR:-$NOOK_PROJECT_DIR/scripts}"
NOOK_DATA_DIR="${NOOK_DATA_DIR:-$NOOK_PROJECT_DIR/data}"

# User data paths
NOOK_NOTES_DIR="${NOOK_NOTES_DIR:-$HOME/notes}"
NOOK_DRAFTS_DIR="${NOOK_DRAFTS_DIR:-$HOME/drafts}"
NOOK_BACKUP_DIR="${NOOK_BACKUP_DIR:-$HOME/backups}"

# ============================================================================
# Hardware Configuration
# ============================================================================

# SD Card settings
NOOK_SD_SIZE_GB="${NOOK_SD_SIZE_GB:-16}"
NOOK_BOOT_PARTITION="${NOOK_BOOT_PARTITION:-/mnt/boot}"
NOOK_ROOT_PARTITION="${NOOK_ROOT_PARTITION:-/mnt/root}"

# E-Ink display settings
NOOK_DISPLAY_WIDTH="${NOOK_DISPLAY_WIDTH:-800}"
NOOK_DISPLAY_HEIGHT="${NOOK_DISPLAY_HEIGHT:-600}"
NOOK_DISPLAY_COLORS="${NOOK_DISPLAY_COLORS:-16}"

# Memory constraints
NOOK_TOTAL_RAM_MB="${NOOK_TOTAL_RAM_MB:-256}"
NOOK_AVAILABLE_RAM_MB="${NOOK_AVAILABLE_RAM_MB:-160}"

# ============================================================================
# Software Configuration
# ============================================================================

# Editor settings
NOOK_EDITOR="${NOOK_EDITOR:-vim}"
NOOK_EDITOR_CONFIG="${NOOK_EDITOR_CONFIG:-$HOME/.vimrc}"

# Menu settings
NOOK_MENU_TIMEOUT="${NOOK_MENU_TIMEOUT:-30}"
NOOK_MENU_REFRESH="${NOOK_MENU_REFRESH:-5}"

# Sync settings
NOOK_SYNC_ENABLED="${NOOK_SYNC_ENABLED:-false}"
NOOK_SYNC_METHOD="${NOOK_SYNC_METHOD:-rclone}"
NOOK_SYNC_REMOTE="${NOOK_SYNC_REMOTE:-}"
NOOK_SYNC_INTERVAL="${NOOK_SYNC_INTERVAL:-3600}"

# ============================================================================
# Boot Configuration
# ============================================================================

# Kernel settings
NOOK_KERNEL_VERSION="${NOOK_KERNEL_VERSION:-2.6.29-quill-scribe}"
NOOK_KERNEL_IMAGE="${NOOK_KERNEL_IMAGE:-uImage}"
NOOK_KERNEL_CMDLINE="${NOOK_KERNEL_CMDLINE:-console=ttyS0,115200n8 root=/dev/mmcblk0p2 rootfstype=ext4 rw rootwait mem=256M init=/sbin/init}"

# Boot loader settings
NOOK_BOOTLOADER="${NOOK_BOOTLOADER:-u-boot}"
NOOK_BOOT_CONFIG="${NOOK_BOOT_CONFIG:-uEnv.txt}"

# ============================================================================
# QuillOS/QuillKernel Settings
# ============================================================================

# Medieval theme
NOOK_ENABLE_JESTER="${NOOK_ENABLE_JESTER:-true}"
NOOK_SHOW_WISDOM="${NOOK_SHOW_WISDOM:-true}"
NOOK_MEDIEVAL_BOOT="${NOOK_MEDIEVAL_BOOT:-true}"

# Writing statistics
NOOK_TRACK_STATS="${NOOK_TRACK_STATS:-true}"
NOOK_STATS_FILE="${NOOK_STATS_FILE:-$NOOK_DATA_DIR/writing-stats.txt}"

# Achievement milestones (in words)
NOOK_MILESTONE_APPRENTICE="${NOOK_MILESTONE_APPRENTICE:-1000}"
NOOK_MILESTONE_JOURNEYMAN="${NOOK_MILESTONE_JOURNEYMAN:-10000}"
NOOK_MILESTONE_MASTER="${NOOK_MILESTONE_MASTER:-50000}"
NOOK_MILESTONE_CHRONICLER="${NOOK_MILESTONE_CHRONICLER:-100000}"

# ============================================================================
# Development Settings
# ============================================================================

# Debug mode
NOOK_DEBUG="${NOOK_DEBUG:-false}"
NOOK_DEBUG_LEVEL="${NOOK_DEBUG_LEVEL:-1}"

# Logging
NOOK_LOG_ENABLED="${NOOK_LOG_ENABLED:-true}"
NOOK_LOG_FILE="${NOOK_LOG_FILE:-/var/log/nook.log}"
NOOK_LOG_LEVEL="${NOOK_LOG_LEVEL:-INFO}"

# Testing
NOOK_TEST_MODE="${NOOK_TEST_MODE:-false}"
NOOK_TEST_DIR="${NOOK_TEST_DIR:-$NOOK_PROJECT_DIR/tests}"

# ============================================================================
# Network Configuration
# ============================================================================

# WiFi settings (if USB WiFi adapter is used)
NOOK_WIFI_ENABLED="${NOOK_WIFI_ENABLED:-false}"
NOOK_WIFI_SSID="${NOOK_WIFI_SSID:-}"
NOOK_WIFI_PASSWORD="${NOOK_WIFI_PASSWORD:-}"

# Network isolation (for distraction-free writing)
NOOK_NETWORK_ISOLATED="${NOOK_NETWORK_ISOLATED:-true}"
NOOK_ALLOW_SYNC_ONLY="${NOOK_ALLOW_SYNC_ONLY:-true}"

# ============================================================================
# Power Management
# ============================================================================

# Battery optimization
NOOK_POWER_SAVE="${NOOK_POWER_SAVE:-true}"
NOOK_CPU_GOVERNOR="${NOOK_CPU_GOVERNOR:-powersave}"
NOOK_SCREEN_TIMEOUT="${NOOK_SCREEN_TIMEOUT:-300}"

# USB power
NOOK_USB_POWER_LIMIT_MA="${NOOK_USB_POWER_LIMIT_MA:-100}"

# ============================================================================
# Plugin System
# ============================================================================

# Plugin settings
NOOK_PLUGINS_ENABLED="${NOOK_PLUGINS_ENABLED:-true}"
NOOK_PLUGINS_DIR="${NOOK_PLUGINS_DIR:-$NOOK_CONFIG_DIR/plugins}"
NOOK_PLUGIN_AUTOLOAD="${NOOK_PLUGIN_AUTOLOAD:-true}"

# ============================================================================
# Helper Functions
# ============================================================================

# Load configuration value with default
# Usage: value=$(get_config "NOOK_EDITOR" "nano")
get_config() {
    local key="$1"
    local default="${2:-}"
    echo "${!key:-$default}"
}

# Set configuration value
# Usage: set_config "NOOK_EDITOR" "vim"
set_config() {
    local key="$1"
    local value="$2"
    export "$key=$value"
}

# Check if feature is enabled
# Usage: if is_enabled "NOOK_DEBUG"; then ...; fi
is_enabled() {
    local key="$1"
    local value="${!key:-false}"
    [[ "${value,,}" == "true" ]] || [[ "$value" == "1" ]]
}

# Validate configuration
validate_config() {
    local errors=0
    
    # Check required directories
    for dir in "$NOOK_PROJECT_DIR" "$NOOK_CONFIG_DIR" "$NOOK_SCRIPTS_DIR"; do
        if [[ ! -d "$dir" ]]; then
            echo "ERROR: Directory not found: $dir" >&2
            ((errors++))
        fi
    done
    
    # Check memory settings
    if [[ $NOOK_AVAILABLE_RAM_MB -gt $NOOK_TOTAL_RAM_MB ]]; then
        echo "ERROR: Available RAM exceeds total RAM" >&2
        ((errors++))
    fi
    
    # Check display settings
    if [[ $NOOK_DISPLAY_WIDTH -le 0 ]] || [[ $NOOK_DISPLAY_HEIGHT -le 0 ]]; then
        echo "ERROR: Invalid display dimensions" >&2
        ((errors++))
    fi
    
    return $errors
}

# Export all configuration variables
export_config() {
    # Export all variables starting with NOOK_
    for var in $(compgen -v | grep ^NOOK_); do
        export "$var"
    done
}

# Load local overrides if they exist
load_local_config() {
    local local_conf="$NOOK_CONFIG_DIR/nook.conf.local"
    if [[ -f "$local_conf" ]]; then
        source "$local_conf"
    fi
}

# ============================================================================
# Auto-initialization
# ============================================================================

# Load local overrides
load_local_config

# Export configuration
export_config

# Validate if not sourced from another script
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    if validate_config; then
        echo "Configuration valid"
    else
        echo "Configuration errors found" >&2
        exit 1
    fi
fi